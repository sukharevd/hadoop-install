Master node:
  - OpenVPN server (configured with 1 client config and key set for all hosts). Network: 10.12.0.0/16
  - DNS server
  - Has 5 interfaces: lo, eth0 (NAT), eth1 (host-only, forwarded vpn port), eth2 (internal network), tun0 (openvpn)
  - Hostname: joda
  - slaves file: hosted
  - Provides service to remove/adding new slaves by IP that returns unique hostname (max hostname in slaves + 1):
    - check IP address;
    - determines available host-number hostname from slaves file;
    - add hostname to slaves file;
    - add IP hostname to DNS database and restart it;
    - returns hostname;

Slave nodes:
  - OpenVPN client.
  - Has 5 interfaces: lo, eth0 (NAT), eth1 (host only), eth2 (internal network), tun0 (openvpn)
  - Hostname: ?
  - slaves file: copied with rsync from master node


========================================================================
=============  USECASE: SET UP HADOOP CLUSTER  =========================
========================================================================

PrimaryDNS       SecondaryDNS        OpenVPN       NameNode       SecondaryNameNode     ResourceManager       Slaves
install-dns master
                 install-dns slave
                                     install-vpn
create-vpn-client(ns1,10.8.0.253)
                 create-vpn-client(ns2,10.8.0.254)
                                                   add-node namenode
                                                   install-hadoop
                                                                  add-node secondary
                                                                  install-hadoop
                                                                                        add-node rman
                                                                                        install-hadoop
                                                                                                              add-node slave
                                                                                                              install-hadoop

========================================================================
=============  USECASE: ADD NEW NODE TO CLUSTER  =======================
========================================================================

New node                      PrimaryDNS          OpenVPN         NameNode
  ------ add-dns-record() -------->
  <---- (hostname, vpn_ip) --------

  ------ add-vpn-client(hostname, vpn_ip) ---------->
  <---- (key, cert, ca, conf) -----------------------

  ---
     | install-hadoop(hostname)
  <---

  ------ add-hadoop-slave(hostname) ----------------------------------->
  <----- OK ------------------------------------------------------------

Notes:
1) New node should have access to primaryDNS;
2) PrimaryDNS is responsible for emitting hostname and IPs;
3) add-node should take one parameter (host type) 


Set of files    | installation scripts  |        Keys      |  Hadoop  |  CherryPy  |  
                |                       |  client  |  ssh  |          |            |
DNS Primary     |           +           |          |       |          |    repo    |  hadoop-install.min.tar.gz
DNS Secondary   |           +           |          |       |          |            |  hadoop-install.min.tar.gz
OpenVPN clients |           +           |          |       |          |    repo    |  hadoop-install.min.tar.gz
Hadoop master   |           +           |     +    |   +   |    +     |    repo    |  hadoop-install-secret.full.tar.gz
Hadoop slaves   |           +           |     +    |   +   |    +     |            |  hadoop-install-secret.full.tar.gz

==USAGE==
Warning: keep order of operations:

Generate keys, download Hadoop, pack everything to archives:
./pack.sh

Copy archives to each new host:
root@debian:~# scp dmitriy@192.168.56.1:~/Desktop/hadoop-install.full.tar.gz ~/ && tar -xzf hadoop-install.full.tar.gz

Install Openvpn at some public host:
root@debian:~# hadoop-install/install.sh openvpn

Install primary DNS at some public host:
root@debian:~# hadoop-install/install.sh dns-primary

Install secondary DNS at some public host:
root@debian:~# hadoop-install/install.sh dns-secondary

Install Apache Hadoop at NameNode:
root@debian:~# hadoop-install/install.sh namenode

Install Apache Hadoop at ResourceManager:
root@debian:~# hadoop-install/install.sh resource-manager

Install Apache Hadoop at all slaves:
root@debian:~# hadoop-install/install.sh slave

Check if default example can be executed at new Hadoop cluster:
hdfs@namenode:~$ $HADOOP_HOME/bin/hadoop jar $HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar pi 2 5
